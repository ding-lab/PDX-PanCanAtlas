PDX data process pipelines
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process

Author: Hua Sun



Pipeline location in MGI-server
================================
/gscmnt/gc3021/dinglab/hsun/PDX-workflow

Submit job script:
    /gscmnt/gc3021/dinglab/hsun/Toolkit/LSF_mgi/lsf_submit.sh
    
Pipelines for running in MIG-server
    /gscmnt/gc3021/dinglab/hsun/pdx_analysis.worklogs.mgi
    (feel free to change codes)
    
    


Set reference
=====================
Human
    Gencode GRCh38 v29
Mouse
    Gencode GRCm38 vM19


Raw data processing
=====================
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/bamToolkit
    trimming adaptor and filtering poor reads: trimGalor.sh
    make bam file : fq2bam_remDup.sh
    
    
    * Example code for running batch data in MGI-Server:
    
    ```
    
    TABLE=./data.sample.table
        # make table like:
        # sampleName  dataType  fq1   fq2
        # TATCGCAC-CTTAGTGT WES /path/TATCGCAC-CTTAGTGT.r1_val_1.fq.gz  /path/TATCGCAC-CTTAGTGT.r2_val_2.fq.gz


    outdir=`pwd`/trimmed_fq
    mkdir -p $outdir

    config=/gscmnt/gc3021/dinglab/hsun/PDX-workflow/bamToolkit/config.human.ini

    #research-hpc
    submit=/gscmnt/gc3021/dinglab/hsun/Toolkit/LSF_mgi/lsf_submit.sh

    script=/gscmnt/gc3021/dinglab/hsun/PDX-workflow/bamToolkit/trimGalor.sh

    sed '1d' $TABLE | while read name dataType fq1 fq2
    do
	    sh $submit 8 1 ${name} bash $script -C ${config} -S ${name} -1 ${fq1} -2 ${fq2} -L 50 -O ${outdir}
    done
    
    ```
    
    
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/mouseFilter.disam.v1
    Mouse reads filter for WES/RNA-Seq data of PDXs
    
    
    * Example code for running batch data in MGI-Server:
    
    ```
    TABLE=./data.table
    # seqID  mgiID  group (header=T)
    # group -- PDX/Human/Cell_Line/Mouse
    # gerald_HFMHWDSXX_2_AACTTGAT-AACTTGAT  TWDE-Fields_1180-D1180-09-XT2_PDX-DNA  PDX

    pdx_script=/gscmnt/gc3021/dinglab/hsun/PDX-workflow/mouseFilter.disam.v1/pdx_disam_kit.sh

    SUBMIT=~/pdxNet/hsun/Toolkit/LSF_mgi/lsf_submit.sh
    
    outdir_pdx=$OUTDIR/3.pdx_wxs_filtered_bam
    
    awk -F['\t'] '$3~"PDX"' $TABLE | while read seqID mgiID group
    do

        if [ ! -d $outdir_pdx ]; then mkdir $outdir_pdx; fi

        FQ1=$DIR/$seqID/*_val_1.fq.gz
        FQ2=$DIR/$seqID/*_val_2.fq.gz

        sh $SUBMIT 48 1 pdx_wxs_fq2bam.${mgiID} bash $pdx_script -p dnaFull -n ${mgiID} -1 $FQ1 -2 $FQ2 -o $outdir_pdx

    done
    
    ``` 



Sample quality control 
=====================
https://github.com/ding-lab/SeqQEst



Somatic mutation – TumorNormal
=====================
https://github.com/ding-lab/somaticwrapper


# Make folder
    somaticMut_tumorNormal/sample/sample.N.bam
    somaticMut_tumorNormal/sample/sample.N.bam.bai
    somaticMut_tumorNormal/sample/sample.T.bam
    somaticMut_tumorNormal/sample/sample.T.bam.bai


# Call somatic mutations v1.5
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/somaticwrapper.mgi/somaticWrapper_wxs.v1.5/run.sw.step1-4.sh ./config.sw.v1.5.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/somaticwrapper.mgi/somaticWrapper_wxs.v1.5/run.sw.step5-8.sh ./config.sw.v1.5.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/somaticwrapper.mgi/somaticWrapper_wxs.v1.5/run.sw.step9.sh ./config.sw.v1.5.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/somaticwrapper.mgi/somaticWrapper_wxs.v1.5/run.sw.step10.sh ./config.sw.v1.5.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/somaticwrapper.mgi/somaticWrapper_wxs.v1.5/run.sw.step11.sh ./config.sw.v1.5.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/somaticwrapper.mgi/somaticWrapper_wxs.v1.5/run.sw.step12.sh ./config.sw.v1.5.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/somaticwrapper.mgi/somaticWrapper_wxs.v1.5/run.sw.step13.sh ./config.sw.v1.5.ini



Somatic mutation – TumorOnly
=====================
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/somatic.Mutect2_tumorOnly


# Make Table
    Sample  BAM

# Call tumorOnly somaticMut    
    mkdir mutect2_results
    cat ./tumorOnly.info | while read sample bam; do bash /gscmnt/gc3021/dinglab/hsun/Toolkit/LSF_mgi/lsf_submit.sh 32 1 full.$sample bash ~/scripts/tumor-only-pipeline.mutect2/somaticMut.tumor-only.mutect2.sh -p full -n $sample -b $bam -o mutect2_results; done
    sh ~/scripts/tumor-only-pipeline.mutect2/somaticMut.tumor-only.mutect2.sh -p merge -o mutect2_results
            



Extra filter for somatic mutations (tumor-normal/tumor-only, human/pdx)
=====================
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/filterSomaticMut
	General human cancer somatic mutations: 
	https://github.com/ding-lab/PDX-PanCanAtlas/blob/master/data_process/appendix_db/GRCh38.cosmic90_tcga.codingMut.filtered.mouse_dbSNP.loci.zip
The detailed description of the filtering, please see the 'Methods' section from our manuscript



Germline mutation
=====================
https://github.com/ding-lab/germlinewrapper


# Make folder
    germlineMut/sample/sample.N.bam
    germlineMut/sample/sample.N.bam.bai


# Call germline mutations v1.1
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/germlineWrapper.v1.1/run.gw.step1-3.sh ./config.gw.mgi.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/germlineWrapper.v1.1/run.gw.step4.sh ./config.gw.mgi.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/germlineWrapper.v1.1/run.gw.step5.sh ./config.gw.mgi.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/germlineWrapper.v1.1/run.gw.step6.sh ./config.gw.mgi.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/germlineWrapper.v1.1/run.gw.step7.sh ./config.gw.mgi.ini
            sh /gscmnt/gc3021/dinglab/hsun/PDX-workflow/PDXToolkit/germlineWrapper.v1.1/run.gw.step8.sh ./config.gw.mgi.ini



Somatic copy number – TumorNormal 
=====================
CNVKit (Tumor-Normal per Case)
https://github.com/ding-lab/cnvkit_pipeline

Please set "config.gencode_grch38.mgi.ini" location to the 'cnvkit_wxs.pipeline.mgi.v4.sh'

        # wxs.paired.table (head=T)
        # ID	Group	Normal	Tumor  Normal_bam	 Tumor_bam
        # TWDE-06-PAR-Tumor	Human_Tumor	TWDE-03-PBMC	TWDE-06-PAR-Tumor	/full_path/TWDE-03-PBMC.remDup.bam	/full_path/TWDE-06-PAR-Tumor.remDup.bam
            
            mkdir cnvkit_tumorNormal
            
            # call tumor cnv from the matched normal
            sh ~/scripts/cnvkit_wxs/cnvkit_wxs.pipeline.mgi.v4.sh -F tumorNormal -T ./wxs.paired.table -O cnvkit_tumorNormal
            # merge results
            sh ~/scripts/cnvkit_wxs/cnvkit_wxs.pipeline.mgi.v4.sh -F merge-tn -T ./wxs.paired.table -O cnvkit_tumorNormal



Somatic copy number – TumorOnly
=====================
CNVKit (PoolNormal approach)
https://github.com/ding-lab/cnvkit_pipeline

"reference_normals.cnn" https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/appendix_db
[Note] The pool-normal file is only limited to use in this study.

Please set "config.gencode_grch38.mgi.ini" location to the 'cnvkit_wxs.pipeline.mgi.v4.sh'

        # tumorOnly.info (no header)
        # sample    /path/bam
            
            mkdir cnvkit_tumorOnly
            
            # call cnv from 'reference_normals.cnn'
            sh ~/scripts/cnvkit_wxs/cnvkit_wxs.pipeline.mgi.v3.sh -F batch-tumor -T ./tumorOnly.info -R poolNormal.v2/reference_normals.cnn -O cnvkit_tumorOnly
            # merge results
            sh ~/scripts/cnvkit_wxs/cnvkit_wxs.pipeline.mgi.v3.sh -F merge-pool -O cnvkit_tumorOnly



MSI – TumorNormal / TumorOnly
=====================
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/msi


Gene expression
=====================
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/geneExpression


Fusion
=====================
https://github.com/ding-lab/PDX-PanCanAtlas/tree/master/data_process/fusion


